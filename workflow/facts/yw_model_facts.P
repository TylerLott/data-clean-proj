
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'restaurant_inspection_pipeline', 'restaurant_inspection_pipeline', 1, 40).
program(2, 'CleanViolations', 'restaurant_inspection_pipeline.CleanViolations', 6, 9).
program(3, 'CleanRestaurants', 'restaurant_inspection_pipeline.CleanRestaurants', 10, 13).
program(4, 'CleanAddresses', 'restaurant_inspection_pipeline.CleanAddresses', 14, 17).
program(5, 'CreateKeys', 'restaurant_inspection_pipeline.CreateKeys', 18, 23).
program(6, 'RenameCols', 'restaurant_inspection_pipeline.RenameCols', 24, 27).
program(7, 'SaveInspections', 'restaurant_inspection_pipeline.SaveInspections', 28, 30).
program(8, 'SaveRestaurants', 'restaurant_inspection_pipeline.SaveRestaurants', 31, 33).
program(9, 'SaveRestaurantInspections', 'restaurant_inspection_pipeline.SaveRestaurantInspections', 34, 36).
program(10, 'SaveAddresses', 'restaurant_inspection_pipeline.SaveAddresses', 37, 39).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).
has_subprogram(1, 5).
has_subprogram(1, 6).
has_subprogram(1, 7).
has_subprogram(1, 8).
has_subprogram(1, 9).
has_subprogram(1, 10).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'restaurant_data_path', 'restaurant_inspection_pipeline<-restaurant_data_path', 3, 1).
port(2, 'out', 'restaurant_data_file', 'restaurant_inspection_pipeline->restaurant_data_file', 4, 2).
port(3, 'in', 'restaurant_data_file', 'restaurant_inspection_pipeline.CleanViolations<-restaurant_data_file', 7, 3).
port(4, 'out', 'cleaned_violations', 'restaurant_inspection_pipeline.CleanViolations->cleaned_violations', 8, 4).
port(5, 'in', 'restaurant_data_file', 'restaurant_inspection_pipeline.CleanRestaurants<-restaurant_data_file', 11, 3).
port(6, 'out', 'cleaned_restaurants', 'restaurant_inspection_pipeline.CleanRestaurants->cleaned_restaurants', 12, 5).
port(7, 'in', 'restaurant_data_file', 'restaurant_inspection_pipeline.CleanAddresses<-restaurant_data_file', 15, 3).
port(8, 'out', 'cleaned_addresses', 'restaurant_inspection_pipeline.CleanAddresses->cleaned_addresses', 16, 6).
port(9, 'in', 'cleaned_violations', 'restaurant_inspection_pipeline.CreateKeys<-cleaned_violations', 19, 4).
port(10, 'in', 'cleaned_restaurants', 'restaurant_inspection_pipeline.CreateKeys<-cleaned_restaurants', 20, 5).
port(11, 'in', 'cleaned_addresses', 'restaurant_inspection_pipeline.CreateKeys<-cleaned_addresses', 21, 6).
port(12, 'out', 'clean_restaurant_data_w_keys', 'restaurant_inspection_pipeline.CreateKeys->clean_restaurant_data_w_keys', 22, 7).
port(13, 'in', 'clean_restaurant_data_w_keys', 'restaurant_inspection_pipeline.RenameCols<-clean_restaurant_data_w_keys', 25, 7).
port(14, 'out', 'clean_restaurant_data_renamed', 'restaurant_inspection_pipeline.RenameCols->clean_restaurant_data_renamed', 26, 8).
port(15, 'in', 'clean_restaurant_data_renamed', 'restaurant_inspection_pipeline.SaveInspections<-clean_restaurant_data_renamed', 29, 8).
port(16, 'in', 'clean_restaurant_data_renamed', 'restaurant_inspection_pipeline.SaveRestaurants<-clean_restaurant_data_renamed', 32, 8).
port(17, 'in', 'clean_restaurant_data_renamed', 'restaurant_inspection_pipeline.SaveRestaurantInspections<-clean_restaurant_data_renamed', 35, 8).
port(18, 'in', 'clean_restaurant_data_renamed', 'restaurant_inspection_pipeline.SaveAddresses<-clean_restaurant_data_renamed', 38, 8).

% FACT: port_alias(port_id, alias).
port_alias(2, 'RestaurantInspectionRead').

% FACT: port_uri_template(port_id, uri).

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(2, 3).
has_in_port(3, 5).
has_in_port(4, 7).
has_in_port(5, 9).
has_in_port(5, 10).
has_in_port(5, 11).
has_in_port(6, 13).
has_in_port(7, 15).
has_in_port(8, 16).
has_in_port(9, 17).
has_in_port(10, 18).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 2).
has_out_port(2, 4).
has_out_port(3, 6).
has_out_port(4, 8).
has_out_port(5, 12).
has_out_port(6, 14).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'restaurant_data_path', '[restaurant_data_path]').
data(2, 'RestaurantInspectionRead', '[RestaurantInspectionRead]').
data(3, 'restaurant_data_file', 'restaurant_inspection_pipeline[restaurant_data_file]').
data(4, 'cleaned_violations', 'restaurant_inspection_pipeline[cleaned_violations]').
data(5, 'cleaned_restaurants', 'restaurant_inspection_pipeline[cleaned_restaurants]').
data(6, 'cleaned_addresses', 'restaurant_inspection_pipeline[cleaned_addresses]').
data(7, 'clean_restaurant_data_w_keys', 'restaurant_inspection_pipeline[clean_restaurant_data_w_keys]').
data(8, 'clean_restaurant_data_renamed', 'restaurant_inspection_pipeline[clean_restaurant_data_renamed]').

% FACT: channel(channel_id, data_id).
channel(1, 4).
channel(2, 5).
channel(3, 6).
channel(4, 7).
channel(5, 8).
channel(6, 8).
channel(7, 8).
channel(8, 8).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(4, 1).
port_connects_to_channel(9, 1).
port_connects_to_channel(6, 2).
port_connects_to_channel(10, 2).
port_connects_to_channel(8, 3).
port_connects_to_channel(11, 3).
port_connects_to_channel(12, 4).
port_connects_to_channel(13, 4).
port_connects_to_channel(14, 5).
port_connects_to_channel(15, 5).
port_connects_to_channel(14, 6).
port_connects_to_channel(16, 6).
port_connects_to_channel(14, 7).
port_connects_to_channel(17, 7).
port_connects_to_channel(14, 8).
port_connects_to_channel(18, 8).

% FACT: inflow_connects_to_channel(port_id, channel_id).

% FACT: outflow_connects_to_channel(port_id, channel_id).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).
